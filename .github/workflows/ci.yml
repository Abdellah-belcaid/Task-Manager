name: Task Manager - CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # === Backend Tests Stage ===
  backend-tests:
    name: Backend - Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin123
          POSTGRES_DB: task_manager_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_URL: postgres://postgres:recettebatch@localhost:5432/task_manager_db
      DB_USER: admin
      DB_PASSWORD: admin123
      SERVER_PORT: 8080
      APP_JWT_SECRET: 77397A24432646294A404E635266556A586E327235753878214125442A472D4B
      APP_JWT_EXPIRATION: 86400000

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Install Maven Dependencies
        working-directory: backend
        run: mvn dependency:go-offline

      - name: Run Backend Tests
        working-directory: backend
        run: mvn test

  # === Backend Build Stage ===
  backend-build:
    name: Backend - Build
    runs-on: ubuntu-latest
    needs: backend-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Build Backend
        working-directory: backend
        run: mvn clean package -DskipTests=false

  # === Frontend Build Stage ===
  frontend-build:
    name: Frontend - Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Frontend Dependencies
        working-directory: frontend
        run: npm install

      - name: Build Frontend
        working-directory: frontend
        run: npm run build
